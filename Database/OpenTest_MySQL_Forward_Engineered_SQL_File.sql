SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';


-- -----------------------------------------------------
-- Table `OpenTest`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`User` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`User` (
  `UserID` INT NOT NULL ,
  `FName` VARCHAR(45) NOT NULL ,
  `LName` VARCHAR(45) NULL ,
  `Email` VARCHAR(45) NULL ,
  `IM` VARCHAR(45) NULL ,
  `KnownAs` VARCHAR(45) NULL ,
  `Thumbnail` BLOB NULL ,
  PRIMARY KEY (`UserID`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`Department`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`Department` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`Department` (
  `DeptID` INT NOT NULL ,
  `Desc` VARCHAR(45) NULL ,
  `BusinessUnitID` VARCHAR(45) NULL ,
  `RP` INT NOT NULL ,
  PRIMARY KEY (`DeptID`) ,
  INDEX `RP_idx` (`RP` ASC) ,
  CONSTRAINT `RP_for_Dept`
    FOREIGN KEY (`RP` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`BusinessUnit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`BusinessUnit` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`BusinessUnit` (
  `BusinessUnitID` INT NOT NULL ,
  `Desc` VARCHAR(45) NULL ,
  `DeptID` INT NULL ,
  `RP` INT NOT NULL ,
  PRIMARY KEY (`BusinessUnitID`) ,
  INDEX `DeptID_idx` (`DeptID` ASC) ,
  INDEX `RP_idx` (`RP` ASC) ,
  CONSTRAINT `Dept_for_BU`
    FOREIGN KEY (`DeptID` )
    REFERENCES `OpenTest`.`Department` (`DeptID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `RP_for_BU`
    FOREIGN KEY (`RP` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`Team`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`Team` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`Team` (
  `TeamID` INT NOT NULL ,
  `Desc` VARCHAR(45) NULL ,
  `BusinessUnitID` INT NULL ,
  `RP` INT NOT NULL ,
  PRIMARY KEY (`TeamID`) ,
  INDEX `BusinessUnitID_idx` (`BusinessUnitID` ASC) ,
  INDEX `RP_idx` (`RP` ASC) ,
  CONSTRAINT `BU_for_Team`
    FOREIGN KEY (`BusinessUnitID` )
    REFERENCES `OpenTest`.`BusinessUnit` (`BusinessUnitID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `RP_for_Team`
    FOREIGN KEY (`RP` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`Product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`Product` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`Product` (
  `ProductID` INT NOT NULL ,
  `BusinessUnitID` INT NULL ,
  `RP` INT NOT NULL ,
  PRIMARY KEY (`ProductID`) ,
  INDEX `BusinessUnitID_idx` (`BusinessUnitID` ASC) ,
  INDEX `RP_idx` (`RP` ASC) ,
  CONSTRAINT `BusinessUnit_for_Product`
    FOREIGN KEY (`BusinessUnitID` )
    REFERENCES `OpenTest`.`BusinessUnit` (`BusinessUnitID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `RP_for_Product`
    FOREIGN KEY (`RP` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`SubTeam`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`SubTeam` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`SubTeam` (
  `SubTeamID` INT NOT NULL ,
  `TeamID` INT NOT NULL ,
  `Desc` VARCHAR(45) NULL ,
  `Thumbnail` BLOB NULL ,
  `RP` INT NULL ,
  PRIMARY KEY (`SubTeamID`) ,
  INDEX `TeamID_idx` (`TeamID` ASC) ,
  UNIQUE INDEX `SubTeamID_UNIQUE` (`SubTeamID` ASC) ,
  INDEX `RP_idx` (`RP` ASC) ,
  CONSTRAINT `TeamID_parent_of_Subteam`
    FOREIGN KEY (`TeamID` )
    REFERENCES `OpenTest`.`Team` (`TeamID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `RP_of_Subteam`
    FOREIGN KEY (`RP` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`Release`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`Release` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`Release` (
  `ReleaseID` INT NOT NULL ,
  `ProductID` INT NULL ,
  `TeamID` INT NULL ,
  `SubTeamID` INT NULL ,
  `RP` INT NOT NULL ,
  PRIMARY KEY (`ReleaseID`) ,
  INDEX `ProductID_idx` (`ProductID` ASC) ,
  INDEX `TeamID_idx` (`TeamID` ASC) ,
  INDEX `SubTeamID_idx` (`SubTeamID` ASC) ,
  INDEX `RP_idx` (`RP` ASC) ,
  CONSTRAINT `Product_for_Release`
    FOREIGN KEY (`ProductID` )
    REFERENCES `OpenTest`.`Product` (`ProductID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Team_supporting_Release`
    FOREIGN KEY (`TeamID` )
    REFERENCES `OpenTest`.`Team` (`TeamID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `SubTeam_supporting_Release`
    FOREIGN KEY (`SubTeamID` )
    REFERENCES `OpenTest`.`SubTeam` (`SubTeamID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `RP_for_Release`
    FOREIGN KEY (`RP` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`DeltaType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`DeltaType` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`DeltaType` (
  `DeltaTypeID` INT NOT NULL ,
  `Desc` VARCHAR(45) NOT NULL ,
  PRIMARY KEY (`DeltaTypeID`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`Requirement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`Requirement` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`Requirement` (
  `ReqID` INT NOT NULL ,
  `Desc` VARCHAR(45) NULL ,
  `LongDesc` VARCHAR(255) NULL ,
  `RP` INT NOT NULL ,
  PRIMARY KEY (`ReqID`) ,
  INDEX `RP_of_Req_idx` (`RP` ASC) ,
  CONSTRAINT `RP_of_Req`
    FOREIGN KEY (`RP` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`Story`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`Story` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`Story` (
  `StoryID` INT NOT NULL ,
  `ShortDesc` VARCHAR(45) NULL ,
  `LongDesc` VARCHAR(255) NULL ,
  `AuthorID` INT NULL ,
  `OwnerID` INT NULL ,
  `CreatedOn` DATETIME NULL ,
  `Size` INT NULL ,
  `State` VARCHAR(45) NULL ,
  `RP` INT NOT NULL ,
  PRIMARY KEY (`StoryID`) ,
  INDEX `RP_of_story_idx` (`RP` ASC) ,
  CONSTRAINT `RP_of_story`
    FOREIGN KEY (`RP` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`AcceptanceCriterion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`AcceptanceCriterion` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`AcceptanceCriterion` (
  `AcceptanceCriterionID` INT NOT NULL ,
  `StoryID` INT NULL ,
  `LocalOrderID` INT NULL ,
  `Title` VARCHAR(45) NULL ,
  `Desc` VARCHAR(4095) NULL ,
  PRIMARY KEY (`AcceptanceCriterionID`) ,
  INDEX `StoryID_idx` (`StoryID` ASC) ,
  CONSTRAINT `Story_holding_AC`
    FOREIGN KEY (`StoryID` )
    REFERENCES `OpenTest`.`Story` (`StoryID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`DeltaFunctionality`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`DeltaFunctionality` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`DeltaFunctionality` (
  `DeltaFuncID` INT NOT NULL ,
  `ReqID` INT NULL ,
  `DeltaType` INT NOT NULL ,
  `StoryID` INT NULL ,
  `AcceptanceID` INT NULL ,
  PRIMARY KEY (`DeltaFuncID`) ,
  INDEX `DeltaTypeID_idx` (`DeltaType` ASC) ,
  INDEX `ReqID_idx` (`ReqID` ASC) ,
  INDEX `StoryID_idx` (`StoryID` ASC) ,
  INDEX `AcceptanceCrit_driving_delta_idx` (`AcceptanceID` ASC) ,
  CONSTRAINT `Type_of_Delta`
    FOREIGN KEY (`DeltaType` )
    REFERENCES `OpenTest`.`DeltaType` (`DeltaTypeID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ReqID_driving_delta`
    FOREIGN KEY (`ReqID` )
    REFERENCES `OpenTest`.`Requirement` (`ReqID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `StoryID_driving_delta`
    FOREIGN KEY (`StoryID` )
    REFERENCES `OpenTest`.`Story` (`StoryID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `AcceptanceCrit_driving_delta`
    FOREIGN KEY (`AcceptanceID` )
    REFERENCES `OpenTest`.`AcceptanceCriterion` (`AcceptanceCriterionID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`BugFixSet`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`BugFixSet` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`BugFixSet` (
  `BugFixSetID` INT NOT NULL ,
  `DeliveredOn` DATETIME NULL ,
  `Comments` VARCHAR(255) NULL ,
  `RP` INT NULL ,
  PRIMARY KEY (`BugFixSetID`) ,
  INDEX `RP_of_BugFixSet_idx` (`RP` ASC) ,
  CONSTRAINT `RP_of_BugFixSet`
    FOREIGN KEY (`RP` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`ChangeSet`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`ChangeSet` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`ChangeSet` (
  `ChangeSetID` INT NOT NULL ,
  `TeamID` INT NULL ,
  `SubTeamID` INT NULL ,
  `BugFixSetID` INT NULL ,
  `DeltaFuncID` INT NULL ,
  `RP` INT NULL ,
  PRIMARY KEY (`ChangeSetID`) ,
  INDEX `DeltaFuncID_idx` (`DeltaFuncID` ASC) ,
  INDEX `BugFixSetID_idx` (`BugFixSetID` ASC) ,
  INDEX `Team_delivering_ChangeSet_idx` (`TeamID` ASC) ,
  INDEX `SubTeam_delivering_ChangeSet_idx` (`SubTeamID` ASC) ,
  CONSTRAINT `DeltaFuncID_packaged_in_ChangeSet`
    FOREIGN KEY (`DeltaFuncID` )
    REFERENCES `OpenTest`.`DeltaFunctionality` (`DeltaFuncID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `BugFixSetID_packaged_in_ChangeSet`
    FOREIGN KEY (`BugFixSetID` )
    REFERENCES `OpenTest`.`BugFixSet` (`BugFixSetID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Team_delivering_ChangeSet`
    FOREIGN KEY (`TeamID` )
    REFERENCES `OpenTest`.`Team` (`TeamID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `SubTeam_delivering_ChangeSet`
    FOREIGN KEY (`SubTeamID` )
    REFERENCES `OpenTest`.`SubTeam` (`SubTeamID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`Payload`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`Payload` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`Payload` (
  `PayloadID` INT NOT NULL ,
  `ReleaseID` INT NOT NULL ,
  `Desc` VARCHAR(45) NULL ,
  `ChangeSetID` INT NULL ,
  PRIMARY KEY (`PayloadID`) ,
  INDEX `ReleaseID_idx` (`ReleaseID` ASC) ,
  INDEX `ChangeSetID_idx` (`ChangeSetID` ASC) ,
  CONSTRAINT `Release_containing_Payload`
    FOREIGN KEY (`ReleaseID` )
    REFERENCES `OpenTest`.`Release` (`ReleaseID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ChangeSetID_for_Payload`
    FOREIGN KEY (`ChangeSetID` )
    REFERENCES `OpenTest`.`ChangeSet` (`ChangeSetID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`Build`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`Build` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`Build` (
  `BuildID` INT NOT NULL ,
  `DeliveredOn` DATETIME NULL ,
  `ExpectedOn` DATETIME NULL ,
  `PayloadID` INT NULL ,
  `ReleaseID` INT NULL ,
  `SubTeamID` INT NOT NULL ,
  `RP` INT NOT NULL ,
  PRIMARY KEY (`BuildID`) ,
  INDEX `PayloadID_idx` (`PayloadID` ASC) ,
  INDEX `ReleaseID_idx` (`ReleaseID` ASC) ,
  INDEX `SubTeamID_idx` (`SubTeamID` ASC) ,
  INDEX `RP_for_build_idx` (`RP` ASC) ,
  CONSTRAINT `Payload_for_Build`
    FOREIGN KEY (`PayloadID` )
    REFERENCES `OpenTest`.`Payload` (`PayloadID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Release_for_Build`
    FOREIGN KEY (`ReleaseID` )
    REFERENCES `OpenTest`.`Release` (`ReleaseID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `SubTeam_delivering_Build`
    FOREIGN KEY (`SubTeamID` )
    REFERENCES `OpenTest`.`SubTeam` (`SubTeamID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `RP_for_build`
    FOREIGN KEY (`RP` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`TestMode`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`TestMode` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`TestMode` (
  `TestModeID` INT NOT NULL ,
  `Name` VARCHAR(128) NOT NULL ,
  `Description` VARCHAR(255) NULL ,
  PRIMARY KEY (`TestModeID`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`Priority`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`Priority` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`Priority` (
  `PriorityID` INT NOT NULL ,
  `Name` VARCHAR(45) NULL ,
  `Value` INT NULL ,
  PRIMARY KEY (`PriorityID`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`PassValue`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`PassValue` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`PassValue` (
  `PassValueID` INT NOT NULL ,
  `Name` VARCHAR(45) NULL ,
  PRIMARY KEY (`PassValueID`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`Test`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`Test` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`Test` (
  `TestID` INT NOT NULL ,
  `Name` VARCHAR(255) NOT NULL ,
  `CreatedOn` DATETIME NOT NULL ,
  `LastRun` DATETIME NULL ,
  `ReviewedOn` DATETIME NULL ,
  `AuthorID` INT NULL ,
  `TestModeID` INT NULL ,
  `PriorityID` INT NULL ,
  `PassValue` INT NULL ,
  PRIMARY KEY (`TestID`) ,
  INDEX `TestModeID_idx` (`TestModeID` ASC) ,
  INDEX `PriorityID_idx` (`PriorityID` ASC) ,
  INDEX `PassValueID_idx` (`PassValue` ASC) ,
  INDEX `Author_idx` (`AuthorID` ASC) ,
  CONSTRAINT `TestMode_for_Test`
    FOREIGN KEY (`TestModeID` )
    REFERENCES `OpenTest`.`TestMode` (`TestModeID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Priority_for_Test`
    FOREIGN KEY (`PriorityID` )
    REFERENCES `OpenTest`.`Priority` (`PriorityID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `PassValue_for_Test`
    FOREIGN KEY (`PassValue` )
    REFERENCES `OpenTest`.`PassValue` (`PassValueID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Author_for_Test`
    FOREIGN KEY (`AuthorID` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`Bug`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`Bug` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`Bug` (
  `BugID` INT NOT NULL ,
  `ShortDesc` VARCHAR(45) NOT NULL ,
  `LongDesc` VARCHAR(255) NULL ,
  `OpenedOn` DATETIME NULL ,
  `AuthorID` INT NULL ,
  `OriginatingTestID` INT NULL ,
  PRIMARY KEY (`BugID`) ,
  INDEX `AuthorID_idx` (`AuthorID` ASC) ,
  INDEX `TestID_idx` (`OriginatingTestID` ASC) ,
  UNIQUE INDEX `BugID_UNIQUE` (`BugID` ASC) ,
  CONSTRAINT `Author_of_Bug`
    FOREIGN KEY (`AuthorID` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Test_which_found_Bug`
    FOREIGN KEY (`OriginatingTestID` )
    REFERENCES `OpenTest`.`Test` (`TestID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`BugFix`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`BugFix` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`BugFix` (
  `BugFixID` INT NOT NULL ,
  `BugFixSetID` INT NULL ,
  `ExternalID` INT NULL ,
  `FixedOn` DATETIME NOT NULL ,
  `BugID` INT NOT NULL ,
  `BeganOn` DATETIME NULL ,
  `FixedBy` INT NOT NULL ,
  PRIMARY KEY (`BugFixID`) ,
  INDEX `BugFixSetID_idx` (`BugFixSetID` ASC) ,
  INDEX `BugID_idx` (`BugID` ASC) ,
  INDEX `FixedBy_idx` (`FixedBy` ASC) ,
  CONSTRAINT `BugFixSetID`
    FOREIGN KEY (`BugFixSetID` )
    REFERENCES `OpenTest`.`BugFixSet` (`BugFixSetID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Bug`
    FOREIGN KEY (`BugID` )
    REFERENCES `OpenTest`.`Bug` (`BugID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FixedBy`
    FOREIGN KEY (`FixedBy` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`Suite`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`Suite` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`Suite` (
  `SuiteID` INT NOT NULL ,
  `Description` VARCHAR(45) NULL ,
  `CreatedOn` DATETIME NULL ,
  `LastRun` DATETIME NULL ,
  `ProductID` INT NULL ,
  `AuthorID` INT NOT NULL ,
  `RP` INT NOT NULL ,
  PRIMARY KEY (`SuiteID`) ,
  INDEX `ProductID_idx` (`ProductID` ASC) ,
  INDEX `AuthorID_idx` (`AuthorID` ASC) ,
  INDEX `OwnerID_idx` (`RP` ASC) ,
  CONSTRAINT `Product_for_Suite`
    FOREIGN KEY (`ProductID` )
    REFERENCES `OpenTest`.`Product` (`ProductID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Author_of_Suite`
    FOREIGN KEY (`AuthorID` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `RP_for_Suite`
    FOREIGN KEY (`RP` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`SetType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`SetType` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`SetType` (
  `SetTypeID` INT NOT NULL ,
  `Name` VARCHAR(45) NULL ,
  PRIMARY KEY (`SetTypeID`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`Step`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`Step` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`Step` (
  `StepID` INT NOT NULL ,
  `LocalOrderID` INT NULL ,
  `Condition` VARCHAR(255) NULL ,
  `ExpValue` VARCHAR(255) NULL ,
  `CurrentPassValue` INT NULL ,
  `LastPassValue` INT NULL ,
  `ParentTest` INT NOT NULL ,
  PRIMARY KEY (`StepID`) ,
  UNIQUE INDEX `StepID_UNIQUE` (`StepID` ASC) ,
  INDEX `Parent_idx` (`ParentTest` ASC) ,
  INDEX `PassValue_idx` (`CurrentPassValue` ASC) ,
  CONSTRAINT `Test_which_step_belongs_to`
    FOREIGN KEY (`ParentTest` )
    REFERENCES `OpenTest`.`Test` (`TestID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Last_PassValue_of_Step`
    FOREIGN KEY (`CurrentPassValue` )
    REFERENCES `OpenTest`.`PassValue` (`PassValueID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`TestSuiteMap`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`TestSuiteMap` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`TestSuiteMap` (
  `SuiteID` INT NOT NULL ,
  `TestID` INT NOT NULL ,
  PRIMARY KEY (`SuiteID`) ,
  INDEX `TestID_idx` (`TestID` ASC) ,
  INDEX `SuiteID_idx` (`SuiteID` ASC) ,
  CONSTRAINT `Test_in_Suite`
    FOREIGN KEY (`TestID` )
    REFERENCES `OpenTest`.`Test` (`TestID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Suite_containing_Test`
    FOREIGN KEY (`SuiteID` )
    REFERENCES `OpenTest`.`Suite` (`SuiteID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`Set`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`Set` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`Set` (
  `SetID` INT NOT NULL ,
  `Name` VARCHAR(45) NULL ,
  `Description` VARCHAR(255) NULL ,
  `AuthorID` INT NULL ,
  `SetTypeID` INT NULL ,
  `RP` INT NULL ,
  `CreatedOn` DATETIME NULL ,
  `LastRun` DATETIME NULL ,
  PRIMARY KEY (`SetID`) ,
  INDEX `SetTypeID_idx` (`SetTypeID` ASC) ,
  INDEX `Author_idx` (`AuthorID` ASC) ,
  INDEX `Rp_idx` (`RP` ASC) ,
  CONSTRAINT `SetType_of_Set`
    FOREIGN KEY (`SetTypeID` )
    REFERENCES `OpenTest`.`SetType` (`SetTypeID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Author_of_Set`
    FOREIGN KEY (`AuthorID` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `RP_for_Set`
    FOREIGN KEY (`RP` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`TestSetMap`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`TestSetMap` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`TestSetMap` (
  `SetID` INT NOT NULL ,
  `TestID` INT NOT NULL ,
  PRIMARY KEY (`SetID`) ,
  INDEX `SetID_idx` (`SetID` ASC) ,
  INDEX `TestID_idx` (`TestID` ASC) ,
  CONSTRAINT `Set_containing_Test`
    FOREIGN KEY (`SetID` )
    REFERENCES `OpenTest`.`Set` (`SetID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Test_in_Set`
    FOREIGN KEY (`TestID` )
    REFERENCES `OpenTest`.`Test` (`TestID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`History`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`History` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`History` (
  `TransactionID` INT NOT NULL ,
  `CreatedOn` DATETIME NOT NULL ,
  `ErrorCode` INT NULL ,
  `LongDesc` VARCHAR(255) NULL ,
  `ShortDesc` VARCHAR(45) NOT NULL ,
  `UserID` INT NULL ,
  PRIMARY KEY (`TransactionID`) ,
  UNIQUE INDEX `TransactionID_UNIQUE` (`TransactionID` ASC) ,
  INDEX `UserID_idx` (`UserID` ASC) ,
  CONSTRAINT `UserID_of_xaction`
    FOREIGN KEY (`UserID` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OpenTest`.`TeamUserMap`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OpenTest`.`TeamUserMap` ;

CREATE  TABLE IF NOT EXISTS `OpenTest`.`TeamUserMap` (
  `UserID` INT NOT NULL ,
  `TeamID` INT NULL ,
  `SubTeamID` INT NULL ,
  PRIMARY KEY (`UserID`) ,
  INDEX `UserID_idx` (`UserID` ASC) ,
  INDEX `TeamID_idx` (`TeamID` ASC) ,
  INDEX `SubTeamID_idx` (`SubTeamID` ASC) ,
  CONSTRAINT `User_for_TUM`
    FOREIGN KEY (`UserID` )
    REFERENCES `OpenTest`.`User` (`UserID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Team_for_TUM`
    FOREIGN KEY (`TeamID` )
    REFERENCES `OpenTest`.`Team` (`TeamID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `SubTeam_for_TUM`
    FOREIGN KEY (`SubTeamID` )
    REFERENCES `OpenTest`.`SubTeam` (`SubTeamID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
